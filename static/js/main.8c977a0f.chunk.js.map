{"version":3,"sources":["img/slide/khoahoc1.jpg","img/slide/khoahoc2.jpg","img/slide/khoahoc3.jpg","Components/CourseItems/index.js","Redux/Actions/index.js","Services/user.js","Services/course.js","Services/index.js","Screens/Home/index.js","Redux/Actions/course.js","Screens/Detail/index.js","Screens/Signup/index.js","Layouts/Header/index.js","Screens/Signin/index.js","Redux/Actions/user.js","App.js","serviceWorker.js","Redux/Reducers/course.js","Redux/Reducers/user.js","Redux/Reducers/root.js","index.js","Redux/Actions/type.js"],"names":["module","exports","CourseItem","Card","className","CardActionArea","CardMedia","src","this","props","item","hinhAnh","style","width","height","CardContent","Typography","gutterBottom","variant","component","tenKhoaHoc","color","nguoiTao","hoTen","CardActions","to","maKhoaHoc","Component","createAction","type","payload","UserService","data","Axios","method","url","user","signupUserSchema","yup","shape","taiKhoan","required","matKhau","email","soDT","matches","maNhom","CourseService","id","token","headers","userService","courseService","HomeScreen","courseList","map","index","dispatch","fetchCourses","then","res","KHOA_HOC","catch","err","console","log","connect","state","course","courses","CourseDetailScreen","registerCourse","JSON","parse","localStorage","getItem","dangKyCourse","accessToken","setState","errs","message","hoTenNguoiTao","top","courseDetail","alt","onClick","match","params","courseId","moTa","fetchCoursesDetail","CHI_TIET_KHOA_HOC","SignupScreen","_handleSubmit","values","signUp","Swal","fire","position","icon","title","showConfirmButton","timer","history","push","response","initialValues","validationSchema","onSubmit","render","formikProps","TextField","label","name","onChange","handleChange","msg","autoComplete","select","SelectProps","native","helperText","Header","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","activeStyle","exact","credentials","aria-haspopup","SigninScreen","signIn","setItem","stringify","DANG_NHAP","setTimeout","maLoaiNguoiDung","App","_getCredentialFromLocal","credentialsStr","path","Boolean","window","location","hostname","initialState","CourseReducer","action","require","UserReducer","RootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.8c977a0f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/khoahoc1.014b17db.jpg\";","module.exports = __webpack_public_path__ + \"static/media/khoahoc2.86a8ea5e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/khoahoc3.ba62d659.jpg\";","import React, { Component } from 'react'\r\nimport {Link, NavLink} from 'react-router-dom'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport ButtonBase from '@material-ui/core/ButtonBase'\r\nimport Typography from '@material-ui/core/Typography';\r\nexport default class CourseItem extends Component {\r\n    render() {\r\n        return (\r\n            // <div>\r\n            //   <Link to={`/detail/${this.props.item.maKhoaHoc}`} className=\"hover col-3 my-3\">\r\n            <Card className=\"card p-2 mb-4\">\r\n                \r\n                {/* <img src={this.props.item.hinhAnh} style={{ width: \"100%\", height: 200 }} />\r\n                <p className=\"lead font-weight-bold\" style={{height:50}}>{this.props.item.tenKhoaHoc} </p>\r\n                <p className=\"lead\">Instructor:{this.props.item.nguoiTao.hoTen}</p>\r\n                <p className=\"lead\">Rating: 5.0</p>\r\n                <Link to={`/detail/${this.props.item.maKhoaHoc}`} className=\"btn btn-success\">Chi Tiết</Link> */}\r\n\r\n\r\n      <CardActionArea>\r\n     \r\n        <CardMedia>\r\n        <img src={this.props.item.hinhAnh} style={{ width: \"100%\", height: 200 }}/>\r\n        </CardMedia>\r\n        <CardContent style={{height:150}}>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\" >\r\n          {this.props.item.tenKhoaHoc}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" >\r\n          Instructor:{this.props.item.nguoiTao.hoTen}\r\n          </Typography>\r\n        </CardContent>\r\n      \r\n      <CardActions>\r\n      <Link to={`/detail/${this.props.item.maKhoaHoc}`} style={{width:\"100%\"}} className=\"btn btn-success\">Chi Tiết</Link>\r\n      </CardActions>\r\n      </CardActionArea>\r\n    \r\n             {/* </div> </Link> */}\r\n             </Card>\r\n        )\r\n    }\r\n}\r\n","//action creator hàm trả về action\r\n// hàm nhận vào type và payload\r\nexport const createAction = (type,payload)=>({\r\n    type,\r\n    payload\r\n})","import Axios from 'axios'\r\nclass UserService{\r\n    //lấy data bỏ vào hàm signUp\r\n    signUp(data){\r\n       return Axios({\r\n\r\n            method:'POST',\r\n            url:'https://elearning0706.cybersoft.edu.vn/api/QuanLyNguoiDung/DangKy',\r\n            data\r\n        })\r\n    }\r\n    signIn(user){\r\n        return Axios({\r\n            method:'POST',\r\n            url:'https://elearning0706.cybersoft.edu.vn/api/QuanLyNguoiDung/DangNhap',\r\n            data:user\r\n        })\r\n    }\r\n}\r\nexport default UserService;","import Axios from 'axios'\r\nimport * as yup from \"yup\"\r\nexport const signupUserSchema = yup.object().shape({\r\n    taiKhoan: yup.string().required(\"*Field is required!\"),\r\n    matKhau: yup.string().required(\"*Field is required!\"),\r\n    hoTen: yup.string().required(\"*Field is required!\"),\r\n    email: yup.string().required(\"*Field is required!\").email(\"*Email is required!\"),\r\n    soDT: yup.string().required(\"*Field is required!\").matches(/^[0-9]+$/),\r\n    maNhom: yup.string().required(\"* Field is required!\")\r\n});\r\nclass CourseService{\r\n    fetchCourses(){\r\n     return   Axios({\r\n\r\n            method: 'GET',\r\n            url: \"https://elearning0706.cybersoft.edu.vn/api/QuanLyKhoaHoc/LayDanhSachKhoaHoc?MaNhom=GP05\"\r\n        })\r\n    }\r\n    fetchCoursesDetail(id){\r\n        return   Axios({\r\n\r\n            method: 'GET',\r\n            //chuyển stringtemp để truyền tham số\r\n            url: `https://elearning0706.cybersoft.edu.vn/api/QuanLyKhoaHoc/LayThongTinKhoaHoc?maKhoaHoc=${id}`\r\n        })\r\n    }\r\n    dangKyCourse (data,token){\r\n        return Axios({\r\n            url:`https://elearning0706.cybersoft.edu.vn/api/QuanLyKhoaHoc/DangKyKhoaHoc`,\r\n            method : 'POST',\r\n            data,\r\n            headers : {'Authorization': `Bearer ${token}`}\r\n        })\r\n    }\r\n}\r\nexport default CourseService","import UserService from \"./user\"\r\nimport CourseService from \"./course\"\r\n//đổi hàm thành biến để gọi\r\nexport const userService = new UserService();\r\nexport const courseService = new CourseService();","import React, { Component } from 'react'\r\nimport CourseItem from '../../Components/CourseItems'\r\nimport { connect } from 'react-redux'\r\nimport slide1 from '../../img/slide/khoahoc1.jpg'\r\nimport slide2 from '../../img/slide/khoahoc2.jpg'\r\nimport slide3 from '../../img/slide/khoahoc3.jpg'\r\nimport { fetchCourses } from '../../Redux/Actions/course';\r\n\r\n\r\n\r\nclass HomeScreen extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n\r\n\r\n                <div className=\"container\" >\r\n                    <h3 className=\" display-4 text-center\">Danh Sách Khóa Học</h3>\r\n                    <div className=\"row\">\r\n                        {/* có bao nhiêu khóa xuất ra , bỏ dữ liệu item vào CoursesItem */}\r\n                        {\r\n                            this.props.courseList.map((item, index) => <div className=\"col-3\">\r\n                                <CourseItem item={item} />\r\n                            </div>)\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    componentDidMount() {\r\n        //axios return promise ES6\r\n        this.props.dispatch(fetchCourses())\r\n    }\r\n}\r\n//Lấy dữ liệu trên store ra xài\r\nconst mapStateToProps = state => ({\r\n    courseList: state.course.courses\r\n});\r\nexport default connect(mapStateToProps)(HomeScreen);\r\n","import { createAction } from \".\";\r\nimport { courseService } from \"../../Services\";\r\nimport { KHOA_HOC, CHI_TIET_KHOA_HOC } from \"./type\";\r\n\r\n\r\n//async action\r\nexport const fetchCourses = () => {\r\n    //nhận vào tham số dispatch\r\n    return dispatch => {\r\n        courseService\r\n            .fetchCourses()\r\n            // Lấy dữ liệu API bỏ vào Store để render khóa học ra\r\n            .then(res => {\r\n                // xong dispatch lên store\r\n                dispatch(createAction(KHOA_HOC, res.data));\r\n\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    };\r\n};\r\n\r\nexport const fetchCoursesDetail = (id)=>{\r\n     return dispatch =>{\r\n        courseService.fetchCoursesDetail(id)\r\n        .then(res => {\r\n             dispatch(createAction(CHI_TIET_KHOA_HOC,res.data));\r\n         }).catch(err => {\r\n             console.log(err)\r\n         })\r\n     }\r\n}\r\n","import React, { Component } from 'react'\r\n// import '../../scss/CourseDetailScreen.scss'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { fetchCoursesDetail } from '../../Redux/Actions/course';\r\n\r\nimport { Fade } from 'react-reveal';\r\nimport { courseService } from '../../Services';\r\n\r\n\r\nclass CourseDetailScreen extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {},\r\n            err: \"\",\r\n            hoTenNguoiTao: \"\"\r\n        }\r\n\r\n\r\n    }\r\n\r\n    // kt = (danhSachKhoaHocDaGhiDanh, maKhoaHoc) => {\r\n    //     console.log(danhSachKhoaHocDaGhiDanh, maKhoaHoc);\r\n    //     const hopLe = danhSachKhoaHocDaGhiDanh?.find(item => item.maKhoaHoc == maKhoaHoc)\r\n    //     if (hopLe) {\r\n    //         return true\r\n    //     } else {\r\n    //         return false\r\n    //     }\r\n\r\n    // }\r\n\r\n    registerCourse=(maKhoaHoc,taiKhoan)=>{\r\n        const user = JSON.parse(localStorage.getItem('user'))\r\n        if(user){\r\n            const data ={\r\n                maKhoaHoc,\r\n                taiKhoan:user.taiKhoan\r\n            }\r\n            courseService.dangKyCourse(data, user.accessToken)\r\n            .then(res=>{\r\n                console.log(res)\r\n                const err = \"Đăng ký thành công\"\r\n                this.setState({ err })\r\n            }).catch(errs=>{\r\n                var err = \"Khóa học này đã được ghi danh\"\r\n\r\n\r\n                console.log(errs.message);\r\n                this.setState({ err })\r\n            })\r\n        }else{\r\n            console.log('Chưa Đăng Nhập')\r\n            var err = \"Vui lòng đăng nhập để ghi danh\"\r\n            this.setState({ err })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Fade top>\r\n                <div className=\"row\">\r\n                {this.state.err ?\r\n                            <div className=\"alert alert-danger\" style={{ width: \"90%\" }}>{this.state.err}</div> :\r\n                            \"\"\r\n                        }\r\n                    <div className=\"col-4 image mt-5 pt-5\">\r\n                <img src={this.props.courseDetail.hinhAnh} style={{ width: \"100%\", height: 200 }} alt=\"course detail\" />\r\n                </div>\r\n                    <div className=\"col-6 mt-5 pt-5\">\r\n                <h3>{this.props.courseDetail.tenKhoaHoc}</h3>\r\n                \r\n                <button onClick={()=>this.registerCourse(this.props.match.params.courseId, this.state.user.taiKhoan)} className=\"btn btn-outline-success py-2 mr-auto\">Đăng ký</button>\r\n                </div>\r\n                </div>\r\n                <div>\r\n                    <h3 >Mô tả khóa học</h3>\r\n                    <p>{this.props.courseDetail.moTa}</p>\r\n                </div>\r\n                </Fade>\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.props.dispatch(fetchCoursesDetail(this.props.match.params.courseId))\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    //Lần đầu lấy dữ liệu sẽ là null nên phai hoặc object nếu không sẽ lỗi\r\n    courseDetail: state.course.courseDetail || {\r\n        maKhoaHoc: '',\r\n        tenKhoaHoc: '',\r\n        hinhAnh: '',\r\n        nguoiTao: {\r\n            taiKhoan: '',\r\n            hoTen: ''\r\n        }\r\n    }\r\n});\r\nexport default connect(mapStateToProps)(CourseDetailScreen);\r\n","import React, { Component } from 'react'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\r\n//thư viện yup định nghĩa thuộc tính kết hợp với formik\r\n\r\nimport { userService } from '../../Services'\r\nimport { signupUserSchema } from '../../Services/course';\r\nimport Swal from 'sweetalert2';\r\nimport TextField from '@material-ui/core/TextField';\r\n// import MenuItem from '@material-ui/core/MenuItem';\r\n\r\n\r\nclass SignupScreen extends Component {\r\n\r\n\r\n    _handleSubmit = values => {\r\n        userService.signUp(values)\r\n            .then(res => {\r\n                console.log(res);\r\n                Swal.fire({\r\n                    position: 'center',\r\n                    icon: 'success',\r\n                    title: 'Đăng ký thàng công',\r\n                    showConfirmButton: false,\r\n                    timer: 1200\r\n                })\r\n                this.props.history.push('/signin')\r\n            }).catch(err => {\r\n                console.log(err);\r\n                Swal.fire({\r\n                    position: 'center',\r\n                    icon: 'error',\r\n                    title: err.response.data,\r\n                    showConfirmButton: false,\r\n                    timer: 1200\r\n                })\r\n            });\r\n    };\r\n    render() {\r\n        return (\r\n            <div className=\"w-50 mx-auto\">\r\n                <h1 className=\"display-4 text-center\">Đăng Kí</h1>\r\n                <Formik\r\n                    //Nhận vào giá trị ban đầu \r\n                    initialValues={{\r\n                        taiKhoan: \"\",\r\n                        matKhau: \"\",\r\n                        hoTen: \"\",\r\n                        email: \"\",\r\n                        soDT: \"\",\r\n                        maNhom: \"GP01\"\r\n                    }}\r\n                    validationSchema={signupUserSchema}\r\n                    //Chạy hàm\r\n                    onSubmit={this._handleSubmit}\r\n                    //formikProps chứa sẵn những hàm như onchage.. để xử lý form\r\n\r\n                    render={(formikProps) => (\r\n                        <Form  >\r\n                            <div className=\"form-group\">\r\n                                {/* <label>Tài Khoản:</label> */}\r\n                                {/* name tương ứng với giá trị initialValues ban đầu  */}\r\n                                {/* <Field type=\"text\" className=\"form-control\" name=\"taiKhoan\" onChange={formikProps.handleChange} /> */}\r\n                                <TextField id=\"outlined-basic\" label=\"Tài Khoản\" variant=\"outlined\" name=\"taiKhoan\" onChange={formikProps.handleChange}  style={{width:\"100%\"}}/>\r\n                                <ErrorMessage name=\"taiKhoan\">{msg => <div className=\"alert alert-danger\"> {msg}</div>}</ErrorMessage>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                {/* <label>Mật Khẩu</label> */}\r\n                                {/* <Field type=\"password\" className=\"form-control\" name=\"matKhau\" onChange={formikProps.handleChange} /> */}\r\n                                <TextField id=\"outlined-password-input\" label=\"Mật Khẩu\" type=\"password\" autoComplete=\"current-password\" name=\"matKhau\" variant=\"outlined\" onChange={formikProps.handleChange} style={{width:\"100%\"}} />\r\n                                <ErrorMessage name=\"matKhau\">{msg => <div className=\"alert alert-danger\"> {msg}</div>}</ErrorMessage>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                {/* <label>Họ Tên:</label> */}\r\n                                {/* <Field type=\"text\" className=\"form-control\" name=\"hoTen\" onChange={formikProps.handleChange} /> */}\r\n                                <TextField id=\"outlined-basic\" label=\"Họ Tên\" variant=\"outlined\" name=\"hoTen\" onChange={formikProps.handleChange} style={{width:\"100%\"}}/>\r\n                                <ErrorMessage name=\"hoTen\">{msg => <div className=\"alert alert-danger\"> {msg}</div>}</ErrorMessage>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                {/* <label>Email:</label> */}\r\n                                {/* <Field type=\"email\" className=\"form-control\" name=\"email\" onChange={formikProps.handleChange} /> */}\r\n                                <TextField id=\"outlined-basic\" label=\"Email\" type=\"email\" variant=\"outlined\" name=\"email\" onChange={formikProps.handleChange}style={{width:\"100%\"}} />\r\n                                <ErrorMessage name=\"email\">{msg => <div className=\"alert alert-danger\"> {msg}</div>}</ErrorMessage>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                {/* <label>Số ĐT:</label> */}\r\n                                {/* <Field type=\"text\" className=\"form-control\" name=\"soDT\" onChange={formikProps.handleChange} /> */}\r\n                                <TextField id=\"outlined-basic\" label=\"Số ĐT\" variant=\"outlined\" name=\"soDT\" onChange={formikProps.handleChange} style={{width:\"100%\"}} />\r\n                                <ErrorMessage name=\"soDT\">{msg => <div className=\"alert alert-danger\"> {msg}</div>}</ErrorMessage>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                {/* <label>Mã Nhóm</label> */}\r\n                                {/* <Field component=\"select\" className=\"form-control\" name=\"maNhom\" onChange={formikProps.handleChange}>\r\n                                    <option>GP01</option>\r\n                                    <option>GP02</option>\r\n                                    <option>GP03</option>\r\n                                    <option>GP04</option>\r\n                                    <option>GP05</option>\r\n                                    <option>GP06</option>\r\n                                    <option>GP07</option>\r\n                                    <option>GP08</option>\r\n                                    <option>GP09</option>\r\n                                    <option>GP10</option>\r\n                                    </Field> */}\r\n                                <TextField  style={{width:\"100%\"}}\r\n                                    id=\"outlined-select-currency-native\"\r\n                                    select\r\n                                    label=\"Mã Nhóm\"\r\n                                    name=\"maNhom\"\r\n                                    onChange={formikProps.handleChange}\r\n\r\n                                    SelectProps={{\r\n                                        native: true,\r\n                                    }}\r\n                                    helperText=\"Chọn mã nhóm\"\r\n                                    variant=\"outlined\"\r\n                                >\r\n                                    <option>GP01</option>\r\n                                    <option>GP02</option>\r\n                                    <option>GP03</option>\r\n                                    <option>GP04</option>\r\n                                    <option>GP05</option>\r\n                                    <option>GP06</option>\r\n                                    <option>GP07</option>\r\n                                    <option>GP08</option>\r\n                                    <option>GP09</option>\r\n                                    <option>GP10</option>\r\n          )\r\n        </TextField>\r\n\r\n                            </div>\r\n                            <div className=\"text-left\">\r\n                                {/* Khi bấm nút SubMit sẽ chạy hàm Submit */}\r\n                                <button className=\"btn btn-success\">Submit</button>\r\n                            </div>\r\n                        </Form>\r\n                    )} />\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default SignupScreen;\r\n","\r\nimport React, { Component } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Header extends Component {\r\n  \r\n  render() {\r\n   \r\n    \r\n    return (\r\n      \r\n      <div>\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-secondary mb-6\">\r\n          <a className=\"navbar-brand\" href=\"#\">E-Learning</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <NavLink activeStyle={{ color: 'green' }} exact to=\"/\" className=\"nav-link\">Home</NavLink>\r\n              </li>\r\n             \r\n            </ul>\r\n           \r\n            <ul className=\"navbar-nav ml-auto\">\r\n              {this.props.credentials ? (\r\n              <div className=\"btn-group\">\r\n\r\n                <button type=\"button\" className=\"btn btn-success dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> Hi {this.props.credentials.hoTen}  </button>\r\n                <div className=\"dropdown-menu\">\r\n                  <a className=\"dropdown-item\" href=\"#\">Action</a>\r\n                  <a className=\"dropdown-item\" href=\"#\">Another action</a>\r\n                  <a className=\"dropdown-item\" href=\"#\">Something else here</a>\r\n                  <div className=\"dropdown-divider\" />\r\n                  <a className=\"dropdown-item\" href=\"#\">Separated link</a>\r\n                </div>\r\n\r\n              </div>\r\n           \r\n             \r\n                \r\n\r\n              ) : (<><li className=\"nav-item\">\r\n                <NavLink activeStyle={{ color: 'green' }} to=\"/signup\" className=\"nav-link\">Sign Up</NavLink>\r\n              </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink activeStyle={{ color: 'green' }} to=\"/signin\" className=\"nav-link\">Sign In</NavLink>\r\n                </li> </>)}\r\n\r\n\r\n\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n// nhận vào state từ store\r\nconst mapStateToProps = state => {\r\n  return {\r\n    credentials: state.user.credentials\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import React, { Component } from 'react'\r\nimport {Form, Formik ,Field} from 'formik'\r\n//connect kết nối JSX với store\r\nimport {connect} from 'react-redux'\r\nimport { login } from '../../Redux/Actions/user'\r\n\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nclass SigninScreen extends Component {\r\n    render() {\r\n        return (\r\n\r\n\r\n            <Formik\r\n            initialValues ={{\r\n                taiKhoan:\"\",\r\n                matKhau :\"\"\r\n            }}\r\n            //bấm submit gọi hàm login chạy lấy giá trị value từ form\r\n            //vừa lên server vửa lên store\r\n            onSubmit={(values)=>{\r\n               this.props.dispatch(login(values))\r\n               setTimeout(() => {\r\n                const user = JSON.parse(localStorage.getItem('user'))\r\n                if (user) {\r\n                    if (user.maLoaiNguoiDung == \"GV\") {\r\n                        this.props.history.push('/')\r\n\r\n                    } else if (user.maLoaiNguoiDung == \"HV\") {\r\n                        this.props.history.push('/')\r\n                    }\r\n                }\r\n                else {\r\n                    this.props.history.push('/dangnhap')\r\n                }\r\n            }, 500);\r\n            }}\r\n            render={(formikProps)=>(\r\n                <Form className=\"w-50  mx-auto\">\r\n                <h1>Đăng Nhập</h1>\r\n                <div className=\"form-group\">\r\n                    {/* <label>Tài Khoản</label>\r\n                    <Field type=\"text\" name=\"taiKhoan\" className=\"form-control\" onChange={formikProps.handleChange} /> */}\r\n                    <TextField id=\"outlined-basic\" label=\"Tài Khoản\" variant=\"outlined\" name=\"taiKhoan\" onChange={formikProps.handleChange}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    {/* <label>Mật Khẩu</label>\r\n                    <Field type=\"password\" name=\"matKhau\" className=\"form-control\" onChange={formikProps.handleChange} /> */}  \r\n                     <TextField id=\"outlined-password-input\" label=\"Mật Khẩu\" type=\"password\" autoComplete=\"current-password\" name=\"matKhau\" variant=\"outlined\" onChange={formikProps.handleChange}/>  \r\n                </div>\r\n                <button to=\"/\" className=\"btn btn-success\">Đăng Nhập</button>\r\n\r\n            </Form>\r\n            )}\r\n            />\r\n            \r\n        )\r\n    }\r\n}\r\nexport default connect() (SigninScreen);\r\n","import { createAction } from \".\"\r\nimport { userService } from \"../../Services\"\r\nimport { DANG_NHAP } from \"./type\"\r\nimport Swal from 'sweetalert2'\r\nexport const login = (user)=>{\r\n    return dispatch =>{\r\n        //thực hiện lấy API\r\n        userService.signIn(user)\r\n        //dispatch action và lưu res.date lưu trên store\r\n        .then (res=>{\r\n            localStorage.setItem('user',JSON.stringify(res.data))\r\n            dispatch(createAction(DANG_NHAP ,res.data));\r\n            //lưu trên localStorage \r\n            \r\n            \r\n            Swal.fire({\r\n                position: 'center',\r\n                icon: 'success',\r\n                title: 'Đăng nhập thành công',\r\n                showConfirmButton: false,\r\n                timer: 1200\r\n            });\r\n        })\r\n        .catch(err=>{\r\n            Swal.fire({\r\n                position: 'center',\r\n                icon: 'error',\r\n                title: err.response.data,\r\n                showConfirmButton: false,\r\n                timer: 1200\r\n            });\r\n        return false\r\n        })\r\n    }\r\n}","import React, { Component } from 'react';\n\nimport './App.css';\nimport HomeScreen from './Screens/Home/index'\nimport CourseDetailScreen from './Screens/Detail';\nimport SignupScreen from './Screens/Signup';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Header from './Layouts/Header';\nimport SigninScreen from './Screens/Signin';\nimport {connect} from 'react-redux'\nimport { createAction } from './Redux/Actions';\nimport { DANG_NHAP } from './Redux/Actions/type';\n\n\nclass App extends Component {\n  render(){ return (\n    <BrowserRouter>\n    <Header/>\n    \n      <Switch>\n\n        <Route path=\"/detail/:courseId\" component={CourseDetailScreen} />\n        <Route path=\"/signup\" component={SignupScreen} />\n        <Route path=\"/signin\" component={SigninScreen} />\n        <Route path=\"/\" component={HomeScreen} />\n        <Route path=\"/demo-react-elearning\" component={HomeScreen} />\n\n      </Switch>\n\n\n    </BrowserRouter>\n\n  )}\n  //Mới vào kiểm tra local của máy có lưu LocalStorage nếu có đẩy lên store\n  _getCredentialFromLocal =()=>{\n      const credentialsStr = localStorage.getItem('user')\n      if(credentialsStr){\n        this.props.dispatch(\n          createAction(DANG_NHAP, JSON.parse(credentialsStr))\n        )\n      }\n  }\n  componentDidMount(){\n    this._getCredentialFromLocal()\n  }\n \n}\n\nexport default connect() (App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","//tạo Reducer cho store\r\n//giá trị ban đầu là rỗng\r\nlet initialState = {\r\n    courses: [],\r\n    courseDetail: null\r\n\r\n};\r\n//Tạo Reducer , Reducer nhận vào dữ liệu course mặc định là initalState , nhận action từ component trả về state\r\nconst CourseReducer = (state = initialState, action) => {\r\n    //dùng switch check action.type\r\n    switch (action.type) {\r\n        //chạy action bên this.prop.dispatch\r\n        case \"KHOA_HOC\":\r\n            state.courses = action.payload;\r\n\r\n            return {\r\n                ...state\r\n            }\r\n        case \"CHI_TIET_KHOA_HOC\":\r\n            state.courseDetail = action.payload;\r\n            return {\r\n                ...state\r\n            }\r\n        //Mặc định ko chỉnh sửa\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\nexport default CourseReducer","const { DANG_NHAP } = require(\"../Actions/type\");\r\n\r\nlet initialState ={\r\n    //credentials là thông tin đăng nhập ban đầu rỗng\r\n    credentials :null\r\n}\r\n//bỏ action dữ liệu vào credentials ban đầu là null\r\nconst UserReducer = (state = initialState, action)=>{\r\n    switch(action.type){\r\n        case DANG_NHAP:\r\n            state.credentials =action.payload\r\n            return{...state};\r\n        default:\r\n            return state;\r\n    }\r\n}   \r\nexport default UserReducer;","import { combineReducers } from \"redux\";\r\n//import Reducer mới tạo vào store, đây là Store nơi chứa các reducer\r\nimport CourseReducer from './course'\r\n\r\nimport UserReducer from './user'\r\n//đây là Store nơi chứa các reducer\r\n\r\n\r\nconst RootReducer = combineReducers({\r\n    course:CourseReducer,\r\n    user:UserReducer\r\n});\r\n\r\nexport default RootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport RootReducer from './Redux/Reducers/root';\nimport thunk from 'redux-thunk'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n//gắn store vào RootReducer\nconst store = createStore(\n  RootReducer,\n  // applyMiddleware(thunk)\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","//lưu chuỗi thành biến cho dễ , tránh sai chính tả\r\nexport const KHOA_HOC = \"KHOA_HOC\";\r\nexport const CHI_TIET_KHOA_HOC = \"CHI_TIET_KHOA_HOC\";\r\nexport const DANG_NHAP = \"DANG_NHAP\""],"sourceRoot":""}